name: Build Executable

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set Up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11.4

      - name: 😀 Installation des librairies
        run: |
          pip install -r Library-list.txt
          
      - name: 😎 Installation de la librairie pyinstaller 
        run: |
          pip install pyinstaller

      - name: 🛠️ Construction de l'exécutable
        run: |
          pyinstaller --noconfirm --onedir --console --icon "Picture/App/logo.ico" "main.py"

      - name: 🏷️ Obtenir la dernière version de l'étiquette
        id: latest_release
        run: echo "::set-output name=tag::$(git describe --tags --abbrev=0)"

      - name: 🔄 Calcul de la nouvelle version Alpha
        id: calculate_version
        run: echo "::set-output name=alpha_version::$(echo ${{ steps.latest_release.outputs.tag }} | cut -d' ' -f2 | awk -F. -v OFS=. '{$NF = $NF + 1;} 1')"

      - name: 🚀 Création d'une version
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.calculate_version.outputs.alpha_version }}
          release_name: Alpha ${{ steps.calculate_version.outputs.alpha_version }}
          draft: false
          prerelease: false

      - name: 📤 Transférer de l'exécutable
        uses: actions/upload-artifact@v2
        with:
          name: executable
          path: dist/main

      - name: 📎 Joindre le fichier exécutable à la version
        id: attach_executable
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/main
          asset_name: StartProject
          asset_content_type: application/x-msdownload